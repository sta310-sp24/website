{
  "hash": "f7052b8c8b78e45ac19380c76cadd234",
  "result": {
    "markdown": "---\ntitle: \"Lecture 04 AE: Estimating coefficients for Poisson Regression\"\ndate: \"2024-01-24\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(knitr)\n\nhh_data <- read_csv(\"data/fHH1.csv\")\n```\n:::\n\n\n# Introduction\n\nThe data in `fHH1.csv` come from the 2015 Family Income and Expenditure Survey conducted by the Philippine Statistics Authority.\n\nThe overall goal is understand the association between household size and various characteristics of the household.\n\n**Response**:\n\n-   `total`: Number of people in the household other than the head\n\n**Predictors**:\n\n-   `location`: Where the house is located\n-   `age`: Age of the head of household\n-   `roof`: Type of roof on the residence (proxy for wealth)\n\n**Other variables**:\n\n-   `numLT5`: Number in the household under 5 years old\n\n**We will focus on the relationship between `total` and `age` for this AE.**\n\n# Iteratively reweighted least squares\n\n## Step 1. Initial estimates of lambda\n\nUsing `total + 0.1` instead of `total` as initial starting values to avoid dividing by 0 or taking the log of 0.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhh_data <- hh_data |>\n  mutate(lambda = hh_data$total + 5)\n```\n:::\n\n\n## Step 2. Calculate the working response values $z_i$.\n\nFor Poisson regression, $z_i = \\log(\\lambda) + \\frac{(y_i - \\lambda_i)}{\\lambda_i}$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhh_data <- hh_data |>\n  mutate(z = log(lambda) + (hh_data$total - lambda) / lambda)\n```\n:::\n\n\n## Step 3. Calculate the working weights $W_i$\n\nFor Poisson regression, $W_i = \\lambda_i$ .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhh_data <- hh_data |>\n  mutate(w = lambda)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhh_data |>\n  select(total, lambda, z, w) |>\n  slice(1:5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 4\n  total lambda     z     w\n  <dbl>  <dbl> <dbl> <dbl>\n1     0      5 0.609     5\n2     3      8 1.45      8\n3     4      9 1.64      9\n4     3      8 1.45      8\n5     3      8 1.45      8\n```\n:::\n:::\n\n\n## Step 4. Find the coefficient estimates of the weighted least squares model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwls <- lm(z ~ age, weight = w, data = hh_data)\ntidy(wls) |>\n  kable(digits = 4)\n```\n\n::: {.cell-output-display}\n|term        | estimate| std.error| statistic| p.value|\n|:-----------|--------:|---------:|---------:|-------:|\n|(Intercept) |   1.7594|    0.0419|   41.9664|   0e+00|\n|age         |  -0.0026|    0.0008|   -3.4172|   6e-04|\n:::\n:::\n\n\n## Use this model to get new estimates of lambda\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhh_data <- hh_data |>\n  mutate(lambda = exp(predict(wls)))\n```\n:::\n\n\nRepeat steps 2 - 4 until the estimates $\\hat{\\beta}_0$ and $\\hat{\\beta}_1$ converge to their respective values.\n\n## IRLS automated\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnreps <- 10\nhh_data <- hh_data %>%\n  mutate(lambda = hh_data$total + 5)\n\n\nbetas <- tibble(beta0 = rep(0, nreps), \n                beta1 = rep(0, nreps))\n\nfor(i in 1:nreps){\n  hh_data <- hh_data %>%\n    mutate(z = log(lambda) + (hh_data$total - lambda)/ lambda, \n         w = lambda)\n  wls <- lm(z ~ age, weight = w, data = hh_data)\n  betas$beta0[i] = tidy(wls)$estimate[1]\n  betas$beta1[i] = tidy(wls)$estimate[2]\n  \n  hh_data <- hh_data %>% \n    mutate(lambda = exp(predict(wls)))\n}\n  \nbetas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   beta0    beta1\n   <dbl>    <dbl>\n 1  1.76 -0.00265\n 2  1.57 -0.00414\n 3  1.55 -0.00468\n 4  1.55 -0.00471\n 5  1.55 -0.00471\n 6  1.55 -0.00471\n 7  1.55 -0.00471\n 8  1.55 -0.00471\n 9  1.55 -0.00471\n10  1.55 -0.00471\n```\n:::\n:::\n\n\n## Fit using the `glm` function\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## add code here\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}