{
  "hash": "9ff36f3a4e17a757d05da0cced9e8121",
  "result": {
    "markdown": "---\ntitle: \"Computing\"\n---\n\n\nYou will need access to R/ RStudio and git for this course. There are two options to access the software:\n\n1.  Install R and RStudio on your laptop\n\n    -   See installation and set up instructions below\n\n2.  Access RStudio through [Docker container](https://cmgr.oit.duke.edu/containers) provided by Duke OIT\n\n    -   Reserve a generic **RStudio** container (there is no course specific container)\n\n# Computing set up\n\n## Step 1: Install R/RStudio and git\n\nYou can install R/RStudio on your local machine and configure it to work with git and GitHub. The text [Happy Git and GitHub for the useR](https://happygitwithr.com/) is a great resource for working with RStudio and git. The steps are outlined below. Click on each link for more detail.\n\n-   Install R and RStudio Desktop: [posit.co/download/rstudio-desktop](https://posit.co/download/rstudio-desktop/)\n\n    -   I recommend installing the desktop version not the preview release of RStudio\n\n-   Install git: [happygitwithr.com/install-git](https://happygitwithr.com/install-git.html)\n\n## Step 2: Install R packages\n\nBelow is a set of R packages we will use throughout the semester. This list is just to get you started; we will let you know as new R packages are required.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\ninstall.packages(\"knitr\")\ninstall.packages(\"lme4\")\ninstall.packages(\"tidymodels\")\ninstall.packages(\"usethis\")\ninstall.packages(\"credentials\")\n```\n:::\n\n\n## Step 3: Install Quarto \n\nWe will use Quarto (similar to R Markdown) to write up analyses. Download and install Quarto at [quarto.org/docs/get-started](https://quarto.org/docs/get-started/)\n\n## Step 4: Set up git authentication \n\nYou will authenticate GitHub using SSH.\n\n1.  Type `credentials::ssh_setup_github()` into your console.\n\n2.  R will ask “No SSH key found. Generate one now?” Click 1 for yes.\n\n3.  You will generate a key. It will begin with “ssh-rsa….” R will then ask “Would you like to open a browser now?” Click 1 for yes.\n\n4.  You may be asked to provide your username and password to log into GitHub. This would be the ones associated with your account that you set up. After entering this information, paste the key in and give it a name. You might name it in a way that indicates where the key will be used, e.g., `sta310`)\n\nYou can find more detailed instructions [here](https://github.com/DukeStatSci/github_auth_guide) if you’re interested.\n\n## **Step 5: Configure git**\n\nWe need to configure your git so that RStudio can communicate with GitHub. This requires two pieces of information: your name and email address.\n\nTo do so, you will use the `use_git_config()` function from the `usethis` package.\n\nType the following lines of code in the **console** in RStudio filling in your name and the email address associated with your GitHub account.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::use_git_config(\n  user.name = \"Your name\", \n  user.email = \"Email associated with your GitHub account\")\n```\n:::\n\n\nFor example, mine would be\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::use_git_config(\n  user.name = \"Maria Tackett\",\n  user.email = \"maria.tackett@duke.edu\")\n```\n:::\n\n\nYou are now ready interact between GitHub and RStudio!\n",
    "supporting": [
      "computing_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}