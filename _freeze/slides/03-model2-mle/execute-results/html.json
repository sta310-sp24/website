{
  "hash": "748620491263b4f142bcd448cbcc59f9",
  "result": {
    "markdown": "---\ntitle: \"Finding the MLEs for Model 2\"\noutput: pdf_document\n---\n\n\nThis document covers multiple ways to find the MLE for Model 2 the conditional model from [Lecture 03: Using likelihoods](../slides/03-likelihoods.html). See the lecture notes for more details about the set up of the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nrefs <- read_csv(\"data/04-refs.csv\")\n```\n:::\n\n\nThe likelihood is\n\n$$\\begin{aligned}Lik(p_{H| N}, p_{H|H Bias}, p_{H |V Bias}) &= [(p_{H| N})^{25}(1 - p_{H|N})^{23}(p_{H| H Bias})^8 \\\\ &(1 - p_{H| H Bias})^{12}(p_{H| V Bias})^{13}(1-p_{H|V Bias})^9]\\end{aligned}$$\n\nThe log-likelihood is\n\n$$\\begin{aligned}\\log (Lik(p_{H| N}, p_{H|H Bias}, p_{H |V Bias})) &= 25 \\log(p_{H| N}) + 23 \\log(1 - p_{H|N}) \\\\ & + 8 \\log(p_{H| H Bias}) + 12 \\log(1 - p_{H| H Bias})\\\\ &+ 13 \\log(p_{H| V Bias}) + 9 \\log(1-p_{H|V Bias})\\end{aligned}$$\n\nWe would like to find the MLEs for $p_{H| N}, p_{H|H Bias}, \\text{ and }p_{H |V Bias}$.\n\n## Finding MLEs using graphs\n\nWe need to find the MLEs for three parameters, therefore we would need to visualize a 4-dimensional object to find the MLEs from a graph. Given the difficulty of this task and the lack of precision in the estimates from this approach, we should rely on other approaches to find the MLEs in this instance.\n\n## Finding MLEs using calculus\n\nWe can find the MLE for each parameter using the partial derivative of the log-likelihood with respect to each parameter.\n\nTo find the MLE for $p_{H| N}$:\n\n$$\\begin{aligned}\\frac{\\partial \\log(Lik(p_{H| N}, p_{H|H Bias}, p_{H |V Bias}))}{\\partial p_{H|N}} &= \\frac{25}{p_{H|N}} - \\frac{23}{1 - p_{H|N}} = 0\\\\[5pt] \n&\\Rightarrow \\frac{25}{p_{H|N}} = \\frac{23}{1 - p_{H|N}} \\\\[5pt] \n&\\Rightarrow 23p_{H|N} = 25(1 - p_{H|N}) \\\\[5pt] \n&\\Rightarrow 48p_{H|N} = 25 \\\\[5pt] \n&\\Rightarrow \\hat{p}_{H|N} = \\frac{25}{48} = 0.521\\end{aligned}$$\n\nWe can use a similar approach to find the MLEs for $p_{H|H Bias}$ and $p_{H|V Bias}$.\n\n$$\\hat{p}_{H|H Bias} = \\frac{8}{20} = 0.4$$ $$\\hat{p}_{H|V Bias} = \\frac{13}{22} = 0.591$$\n\n## Finding the MLEs using R\n\nWe can write a function and do a grid search to find the values that maximize the log-likelihood.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmaxloglik<- function(nvals){\n  #nvals specifies the number of values\n  phn <- seq(0, 1, length = nvals)\n  phh <- seq(0, 1, length = nvals)\n  phv <- seq(0, 1, length = nvals)\n  \n  loglik <- expand.grid(phn, phh, phv) \n  colnames(loglik) <- c(\"phn\", \"phh\", \"phv\")\n  \n  loglik <- loglik %>%\n    mutate(loglik  = log(phn^25 * (1 - phn)^23 * phh^8 * (1 - phh)^12 * \n                           phv^13 * (1 - phv)^9))\n  \n  loglik %>%\n    arrange(desc(loglik)) %>%\n    slice(1)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmaxloglik(100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        phn       phh       phv    loglik\n1 0.5252525 0.4040404 0.5858586 -61.57691\n```\n:::\n:::\n\n\nDepending on the number of parameters, it may be hard to conduct a granular enough search to find the exact values of the MLEs. Therefore, one could use the function above to conduct a crude search to find starting values for R's `optim` function. The function `optim` differs from `optimize` in that it can optimize over multiple parameter values (The `optimize` function can only optimize over a single parameter value).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to calculate log-likelihood that will be used in the optim function\nloglik <- function(params){\n  phn <- params[1]\n  phh <- params[2]\n  phv <- params[3]\n\n  log(phn^25 * (1 - phn)^23 * phh^8 * (1 - phh)^12 * \n                           phv^13 * (1 - phv)^9)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# use manual search to get starting values \nstart_vals <- maxloglik(50) %>% select(-loglik)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use optim function in R to find the values to maximize the log-likelihood\n#set fnscale = -1 to maximize (the default is minimize)\noptim(par = start_vals, fn = loglik, control=list(fnscale=-1))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$par\n      phn       phh       phv \n0.5208272 0.4000361 0.5909793 \n\n$value\n[1] -61.57319\n\n$counts\nfunction gradient \n      66       NA \n\n$convergence\n[1] 0\n\n$message\nNULL\n```\n:::\n:::\n",
    "supporting": [
      "03-model2-mle_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}